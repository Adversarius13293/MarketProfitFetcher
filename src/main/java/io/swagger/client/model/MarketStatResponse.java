/*
 * Albion Online Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * MarketStatResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-06T23:40:29.678+02:00[Europe/Berlin]")
public class MarketStatResponse {
  @SerializedName("timestamps")
  private List<Long> timestamps = null;

  @SerializedName("pricesMin")
  private List<Long> pricesMin = null;

  @SerializedName("pricesMax")
  private List<Long> pricesMax = null;

  @SerializedName("pricesAvg")
  private List<Double> pricesAvg = null;

  @SerializedName("itemCount")
  private List<Long> itemCount = null;

  public MarketStatResponse timestamps(List<Long> timestamps) {
    this.timestamps = timestamps;
    return this;
  }

  public MarketStatResponse addTimestampsItem(Long timestampsItem) {
    if (this.timestamps == null) {
      this.timestamps = new ArrayList<Long>();
    }
    this.timestamps.add(timestampsItem);
    return this;
  }

   /**
   * Get timestamps
   * @return timestamps
  **/
  @Schema(description = "")
  public List<Long> getTimestamps() {
    return timestamps;
  }

  public void setTimestamps(List<Long> timestamps) {
    this.timestamps = timestamps;
  }

  public MarketStatResponse pricesMin(List<Long> pricesMin) {
    this.pricesMin = pricesMin;
    return this;
  }

  public MarketStatResponse addPricesMinItem(Long pricesMinItem) {
    if (this.pricesMin == null) {
      this.pricesMin = new ArrayList<Long>();
    }
    this.pricesMin.add(pricesMinItem);
    return this;
  }

   /**
   * Get pricesMin
   * @return pricesMin
  **/
  @Schema(description = "")
  public List<Long> getPricesMin() {
    return pricesMin;
  }

  public void setPricesMin(List<Long> pricesMin) {
    this.pricesMin = pricesMin;
  }

  public MarketStatResponse pricesMax(List<Long> pricesMax) {
    this.pricesMax = pricesMax;
    return this;
  }

  public MarketStatResponse addPricesMaxItem(Long pricesMaxItem) {
    if (this.pricesMax == null) {
      this.pricesMax = new ArrayList<Long>();
    }
    this.pricesMax.add(pricesMaxItem);
    return this;
  }

   /**
   * Get pricesMax
   * @return pricesMax
  **/
  @Schema(description = "")
  public List<Long> getPricesMax() {
    return pricesMax;
  }

  public void setPricesMax(List<Long> pricesMax) {
    this.pricesMax = pricesMax;
  }

  public MarketStatResponse pricesAvg(List<Double> pricesAvg) {
    this.pricesAvg = pricesAvg;
    return this;
  }

  public MarketStatResponse addPricesAvgItem(Double pricesAvgItem) {
    if (this.pricesAvg == null) {
      this.pricesAvg = new ArrayList<Double>();
    }
    this.pricesAvg.add(pricesAvgItem);
    return this;
  }

   /**
   * Get pricesAvg
   * @return pricesAvg
  **/
  @Schema(description = "")
  public List<Double> getPricesAvg() {
    return pricesAvg;
  }

  public void setPricesAvg(List<Double> pricesAvg) {
    this.pricesAvg = pricesAvg;
  }

  public MarketStatResponse itemCount(List<Long> itemCount) {
    this.itemCount = itemCount;
    return this;
  }

  public MarketStatResponse addItemCountItem(Long itemCountItem) {
    if (this.itemCount == null) {
      this.itemCount = new ArrayList<Long>();
    }
    this.itemCount.add(itemCountItem);
    return this;
  }

   /**
   * Get itemCount
   * @return itemCount
  **/
  @Schema(description = "")
  public List<Long> getItemCount() {
    return itemCount;
  }

  public void setItemCount(List<Long> itemCount) {
    this.itemCount = itemCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketStatResponse marketStatResponse = (MarketStatResponse) o;
    return Objects.equals(this.timestamps, marketStatResponse.timestamps) &&
        Objects.equals(this.pricesMin, marketStatResponse.pricesMin) &&
        Objects.equals(this.pricesMax, marketStatResponse.pricesMax) &&
        Objects.equals(this.pricesAvg, marketStatResponse.pricesAvg) &&
        Objects.equals(this.itemCount, marketStatResponse.itemCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamps, pricesMin, pricesMax, pricesAvg, itemCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketStatResponse {\n");
    
    sb.append("    timestamps: ").append(toIndentedString(timestamps)).append("\n");
    sb.append("    pricesMin: ").append(toIndentedString(pricesMin)).append("\n");
    sb.append("    pricesMax: ").append(toIndentedString(pricesMax)).append("\n");
    sb.append("    pricesAvg: ").append(toIndentedString(pricesAvg)).append("\n");
    sb.append("    itemCount: ").append(toIndentedString(itemCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
